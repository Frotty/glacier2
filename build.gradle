plugins {
    id "jacoco"
    id "com.github.kt3k.coveralls" version "2.5.0"
}

group 'de.fatox'
version '0.0.1-SNAPSHOT'


apply plugin: 'antlr'
apply plugin: 'java'
apply plugin: 'idea'


jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

ext.antlr = [
        grammarpackage: "antlr4",
        antlrSource   : 'src/main/resources/grammar',
        destinationDir: "src/generated-sources/"
]

idea {
    module {
        sourceDirs += file('src/generated-sources')
    }
}

configurations {
    antlr4 {
        description = "antlr4"
    }

}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSourceZ(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    def tmpcp = classpath;
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", grammars.files].flatten()
    tmpcp = tmpcp;

}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

compileJava {
    dependsOn generateGrammarSourceZ
    source antlr.destinationDir
}

dependencies {
    compile group: "org.antlr", name: "antlr4-runtime", version: "4.5"
    antlr4 group: "org.antlr", name: "antlr4", version: "4.5"
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

